{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","AlertModal","className","StockInfo","stock","TabContent","useEffect","setSwitchAni","tab","connect","state","reducer","isAlertCloseState","reducerAlert","useState","isAlertTime","setIsAlertTime","inputData","setInputData","setTab","switAni","useContext","stockContext","setTimeout","clearTimeout","id","useParams","product","find","x","JSON","parse","localStorage","getItem","setItem","stringify","lsARR","includes","push","Set","history","useHistory","onChange","e","target","value","src","width","title","content","price","onClick","dispatch","type","payload","name","quan","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"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","file":"static/js/4.d1ef68ec.chunk.js","sourcesContent":["/* eslint-disable */\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Nav } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport {stockContext} from './App.js';\r\nimport {SwitchTransition, CSSTransition} from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n\r\n// class Detail2 extends React.Component {\r\n//   componentDidMount(){\r\n//     //AJAX 요청 같은 컴포넌트 마운트 전 실행되는 것\r\n//   }\r\n\r\n//   componentWillUnmount(){\r\n//     //컴포넌트 마운트 되기 전 실행되는 것\r\n//   }\r\n\r\n// }\r\n\r\nlet 박스 = styled.div`\r\n    padding : 20px;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n    font-size : 25px;\r\n    color : ${props => props.색상}\r\n`;\r\n\r\nfunction Detail(props){ \r\n\r\n    let [isAlertTime, setIsAlertTime] = useState(true);\r\n    let [inputData, setInputData] = useState('');\r\n    let [tab, setTab] = useState(0);\r\n    let [switAni, setSwitchAni] = useState(false);\r\n\r\n    //export Context로 컴포넌트 값 공유\r\n    let stock = useContext(stockContext);\r\n\r\n    //컴포넌트가 마운트 되었을때, 업데이트 될 때, 특정 코드 실행\r\n    useEffect(()=>{//중복사용 가능(순차적 실행)\r\n\r\n      //AJAX요청( jQuery,axios,fetch() )할 때 쓰임\r\n      //axios.get().then().catch();\r\n      \r\n      setTimeout(()=>{\r\n        setIsAlertTime(false);\r\n      },2000);\r\n\r\n      //아래는, Detail 컴포넌트가 언마운트 될 때 실행됨\r\n      //setTimeout 같은 펑션 안의 코드가 '뒤로가기' 같은 이벤트 시 오류 발생하므로 \r\n      //리턴 코드 안에, 타이머 제거해야됨\r\n      return ()=>{ clearTimeout(); }\r\n\r\n    },[isAlertTime]);//[] <- 비어있으면 컴포넌트가 한번 랜더링 될때만 실행됨\r\n\r\n    let { id } = useParams();\r\n    let product = props.product.find((x)=>{\r\n        return x.id == id;\r\n    });\r\n    \r\n    useEffect(()=>{\r\n      //로컬스토리지에 json형식으로 id키값의 배열[]저장\r\n      if(JSON.parse(localStorage.getItem(\"id\")) == null){\r\n        localStorage.setItem(\"id\", JSON.stringify([product.id]));\r\n      }else{\r\n        let lsARR = JSON.parse(localStorage.getItem(\"id\"));\r\n        if(lsARR.includes(product.id) == false){\r\n          lsARR.push(product.id);\r\n          lsARR = new Set(lsARR);\r\n          lsARR = [...lsARR];\r\n          localStorage.setItem(\"id\",JSON.stringify(lsARR));  \r\n        }\r\n          \r\n      }\r\n    },[]);\r\n    \r\n    \r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className=\"container\">\r\n          {stock}\r\n          <박스><제목 className=\"red\" 색상={'red'}>상세페이지</제목></박스>\r\n          <박스><제목 className=\"blue\">상세페이지</제목></박스>\r\n          \r\n          { inputData }\r\n          <input onChange={ (e)=>{ setInputData(e.target.value) } } />\r\n\r\n          {\r\n            isAlertTime === true\r\n            ? <AlertModal />\r\n            : null\r\n          }\r\n          \r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <img src={'https://codingapple1.github.io/shop/shoes'+(product.id+1)+'.jpg'} width=\"100%\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n            <h4 className=\"pt-5\">{product.title}</h4>\r\n              <p>{product.content}</p>\r\n              <p>{product.price}</p>\r\n\r\n              <StockInfo stock={ props.stock }></StockInfo>\r\n\r\n              <button className=\"btn btn-danger\" onClick={ ()=> {\r\n                \r\n                //주문하면 카트담기\r\n                props.dispatch({ type: \"cartAdd\", payload:{\r\n                                                id:product.id,\r\n                                                name:product.title,\r\n                                                quan:1} });\r\n                history.push('/cart');\r\n              }}>주문하기</button> &nbsp;\r\n              <button className=\"btn btn-danger\" onClick={()=>{\r\n                history.goBack();\r\n              }}>뒤로가기</button> \r\n            </div>\r\n          </div>\r\n          \r\n          <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-0\" onClick={()=>{ setSwitchAni(false); setTab(0); }}>탭1</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-1\" onClick={()=>{ setSwitchAni(false); setTab(1); }}>탭2</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-2\" onClick={()=>{ setSwitchAni(false); setTab(2); }}>탭3</Nav.Link>\r\n            </Nav.Item>\r\n            \r\n          </Nav>\r\n          <CSSTransition in={switAni} classNames=\"wow\" timeout={500}>\r\n            <TabContent tab={tab} setSwitchAni={setSwitchAni}/>\r\n          </CSSTransition>\r\n          \r\n\r\n        </div> \r\n    )\r\n  }\r\n\r\n  function AlertModal(){\r\n    return(\r\n      <div className=\"my-alert my-alert-2\"> \r\n        <p>재고가 얼마 남지 않았습니다.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function StockInfo(props){\r\n    return(\r\n      <p>재고 : {props.stock[0]}</p>\r\n    );\r\n  }\r\n\r\n  function TabContent(props){\r\n\r\n    useEffect(()=>{\r\n      props.setSwitchAni(true);\r\n    });\r\n\r\n    if(props.tab === 0){\r\n      return <div>탭1 내용</div>\r\n    }else if(props.tab === 1){\r\n      return <div>탭2 내용</div>\r\n    }else if(props.tab === 2){\r\n      return <div>탭3 내용</div>\r\n    }\r\n          \r\n  }\r\n\r\n\r\n//redux state를 props처럼 만들어주는 함수\r\n//Provider로 부터 들어온 store 가 state에 담겨있음\r\n//해당 컴포넌트에서 사용될 props.xxx 를 state로 \r\nfunction reduxFunc(state){\r\n  return {\r\n      state : state.reducer,\r\n      isAlertCloseState : state.reducerAlert\r\n  }\r\n}\r\n\r\n//redux 쓰려면 아래와 같이 reduxFunc 연결하고, 사용할 컴포넌트 \r\nexport default connect(reduxFunc)(Detail);\r\n//export default Detail;"],"sourceRoot":""}