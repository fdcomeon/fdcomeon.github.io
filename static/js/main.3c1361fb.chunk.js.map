{"version":3,"sources":["data.js","Cart.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["id","title","content","price","connect","state","reducer","isAlertCloseState","reducerAlert","props","Table","responsive","map","i","name","quan","onClick","dispatch","type","payload","className","console","log","Detail","lazy","stockContext","React","createContext","App","useState","Data","data","dataChf","stock","setStock","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","Provider","value","a","Material","product","axios","get","then","result","catch","fallback","useContext","history","useHistory","push","src","width","Test","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initStore","store","createStore","combineReducers","action","findState","find","findIndex","x","stateCopy","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3c1361fb.chunk.js","sourcesContent":["export default[\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n] ","/* eslint-disable */\r\nimport React, { memo } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Cart(props){\r\n    return(\r\n        //redux state를 수정하기 위한 action.type은\r\n        //props.dispatch({type: \"quanAdd\"}) 와 같은 방식으로\r\n        <div>\r\n        <Table responsive=\"sm\">\r\n            <thead>\r\n            <tr>\r\n                <th>id</th>\r\n                <th>상품명</th>\r\n                <th>수량</th>\r\n                <th>변경</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.state.map((state,i)=>{\r\n                        return (\r\n                            <tr key={i}>\r\n                                <td>{ state.id }</td>\r\n                                <td>{ state.name }</td>\r\n                                <td>{ state.quan }</td>\r\n                                <td>\r\n                                    <button onClick={()=>{ props.dispatch({type: \"quanAdd\", payload : {id : state.id} }) }}>+</button>\r\n                                    <button onClick={()=>{ props.dispatch({type: \"quanSubt\", payload : {id : state.id} }) }}>-</button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n            </tbody>\r\n        </Table>\r\n        {\r\n            props.isAlertCloseState === false\r\n            ?  (<div className=\"my-alert my-alert-2\"> \r\n                    <p>Alert 테스트</p>\r\n                    <button onClick={()=>{ \r\n                        console.log(1);\r\n                        props.dispatch({type: \"alertClose\"});\r\n\r\n                    }}>닫기</button>\r\n                </div>)\r\n            : null\r\n        }\r\n        \r\n    </div>\r\n    );\r\n}\r\n\r\n//redux state를 props처럼 만들어주는 함수\r\n//Provider로 부터 들어온 store 가 state에 담겨있음\r\n//해당 컴포넌트에서 사용될 props.xxx 를 state로 \r\nfunction reduxFunc(state){\r\n    return {\r\n        state : state.reducer,\r\n        isAlertCloseState : state.reducerAlert\r\n    }\r\n}\r\n\r\n//redux 쓰려면 아래와 같이 reduxFunc 연결하고, 사용할 컴포넌트 \r\nexport default connect(reduxFunc)(Cart);\r\n//export default Cart;","/* eslint-disable */\nimport React, { useState, useContext, lazy, Suspense } from 'react';\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron } from 'react-bootstrap';\nimport {Link, Route, Switch, useHistory} from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport Data from './data.js';\nimport Cart from './Cart.js';\n\n//import Detail from './Detail.js';\n//위 import 방법 대신, lazy loading으로 바로사용하지 않는 컴포넌트 필요해질 때 로딩\n//ES6 Dynamic import 기법 + 해당 컴포넌트 태그를 Suspense태그로 감싸기\nlet Detail = lazy(()=>{ return import('./Detail.js') });\n\n\n//PWA : npx create-react-app 프로젝트명 --template cra-template-pwa 명령어로 생성\n\n//성능 올리는 방법\n// 1. 함수이름으로 따로 만들어서 사용(메모리 할당 문제) <- onClick 같은 이벤트에, 이름없는 콜백함수 자제\n// 2. CSS 오브젝트 같은 경우도 변수로 선언해서 사용(메모리 할당 문제)\n// 3. 레이아웃 잡는 애니메이션 자제(랜더링 문제) <- 되도록 transform, opacity 사용\n// 4. App.js에서 import되는 컴포넌트들은 순차적으로 로드함(메모리 할당 문제) <- lazy loading 사용\n// 5. React devtools : 크롬에서 디버깅 및 테스트 도와줌 \n//  Components : (컴포넌트태그, state, props값)\n//    - 타이머 : 컴포넌트 랜더링 정지 -> '로딩중'과 같은 기능 확인\n//  Profiler : 컴포넌트 랜더링속도 + 단계 녹화(파란색 버튼 누르고 끄면서 녹화)\n//    - 설정체크로, 지속적으로 재랜더링되는 컴포넌트 확인가능\n// 6. memo() : 자식 컴포넌트의 불필요한 재 랜더링 막는 방법\n//            : 기존 props 와 바뀐 props 비교연산하므로, props양이 많으면 비효율적\n//    let Child = memo(function(){\n//      return <div>memo 예시 컴포넌트</div>\n//    })\n\n//1. props : 다중 컴포넌트 간, state 값 공유\n//2. Context API : 다중 컴포넌트 간, state 값 공유 라이브러리\n//3. Redux : 모든 컴포넌트들이 같은 값을 공유할 수 있는 저장공간 생성(state값 관리)\n//다른파일에도 공유하고 싶으면, export 붙이고, 사용할 파일에서 import해서 사용\nexport let stockContext = React.createContext();\n\nfunction App() {\n\n  let [data, dataChf] = useState(Data);\n  let [stock, setStock] = useState([10,20,30]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">구매 일반자재 시스템</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/react/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/react/detail\">Detail</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          \n        </Navbar.Collapse>\n      </Navbar>\n      \n      <Switch>\n        <Route exact path=\"/react/\" >\n          <Jumbotron className=\"jumbo\">\n            <h1>점보트론 제목</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          <div className=\"container\">\n\n            <stockContext.Provider value={stock}>\n              <div className=\"row\">\n              \n                  {\n                    data.map((a,i)=>{\n                      return <Material product={ data[i] } i={i} key={i}/>  \n                    })\n                  }\n              </div>\n            </stockContext.Provider>\n            <button className=\"btn btn-primary\" onClick={()=>{\n              \n              //로딩중 UI 띄움(true정보 useState활용)\n              \n              //ajax 요청(post)\n              //axios.post('서버URL', {id : 'id정보', pw : 1234}).then().catch();\n\n              //ajax 요청(get)\n              //fetch, json객체를 그대로 가져오므로 object로 바꿔주는 추가작업 필요\n              //fetch('https://codingapple1.github.io/shop/data2.json').then().catch();\n              \n              //ajax 요청(get)\n              //서버개발자에게 어떤URL로 요청해야되는지 협업\n              //axios, json객체를 자동으로 object로 바꿔줌\n              //'더보기' 버튼누른 횟수를 useState에 저장하고 url의 숫자를 바꿔주면서 계속해서 더해줌\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{\n                //성공했을 때 \n                \n                //로딩중 UI 제거(true정보 useState활용)\n\n                //ajax 요청 후, 데이터 처리\n                console.log('성공'); console.log(result.data);\n                dataChf([...data, ...result.data]); \n                {\n                  data.map((a,i)=>{\n                    return <Material product={ data[i] } i={i} key={i}/>  \n                  })\n                }\n              })\n              .catch(()=>{\n                //실패했을 때(콜백함수)\n\n                //로딩중 UI 제거(true정보 useState활용)\n                \n                //ajax 요청 후, 데이터 처리\n                console.log('실패'); \n              });\n            }}>더보기</button>\n\n            \n          </div>\n        </Route>\n\n        <Route path=\"/react/detail/:id\">\n          <stockContext.Provider value={stock}>\n            <Suspense fallback={<div>로딩중</div>}>\n              <Detail product={ data } stock={ stock } setStock = {setStock} />  \n            </Suspense>\n          </stockContext.Provider>\n        </Route>\n        \n        <Route path=\"/react/cart\">\n          <Cart />\n        </Route>\n            \n\n        <Route path=\"/react/:id\">\n          <div>\n            test\n          </div>\n        </Route>\n      </Switch>\n      \n\n      {/* <Route path=\"/000\" component={Modal}><div></div></Route> */}\n      \n      \n    </div>\n  );\n\n  \n\n  //컴포넌트태그에서 onClick 오류날 수 있으므로,\n  //컴포넌트에서 onClick 사용\n  function Material(props){\n    \n    let stock = useContext(stockContext);\n    let history = useHistory();//history.push();사용하기 위해서\n\n    return (\n      <div className=\"col-md-4\" onClick={()=>{ history.push('/react/detail/'+props.product.id) }}>\n        <img src={'https://codingapple1.github.io/shop/shoes'+(props.i+1)+'.jpg'} width=\"100%\"/>\n        <h4>{props.product.title}</h4>\n        <h4>{props.product.content}</h4>\n        <h4>{props.product.price}</h4>\n        \n        {stock}\n        <Test></Test>\n      </div> \n    );\n  }\n\n  function Test(){\n    let stock = useContext(stockContext);\n    return <p>재고 : {stock[0]}</p>\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n//초기 state\nlet initStore = [\n  {id:11, name:'신발', quan:2},\n  {id:22, name:'모자', quan:6},\n  {id:33, name:'장갑', quan:8},\n] \n\n//컴포넌트의 redux state의 초기state or 수정state를 return하는 함수 \nfunction reducer(state = initStore, action) {\n  if(action.type === 'cartAdd' ){//Detail -> 장바구니 담기\n    let findState = state.find((state)=>{ \n      if(state.id === action.payload.id){\n        return true;\n      }\n     });\n\n    if(findState){\n      console.log('중복데이터 존재');\n      let findIndex = state.findIndex(x => x.id === findState.id);\n      state[findIndex].quan++;\n      let stateCopy = [...state];\n      return stateCopy;\n    }else{\n      console.log('중복데이터 미존재');\n      let stateCopy = [...state];\n      stateCopy.push(action.payload);\n      return stateCopy;\n    }\n    \n  }else if( action.type === 'quanAdd' ){\n    \n    let findIndex = state.findIndex(x => x.id === action.payload.id);\n    let stateCopy = [...state];\n    stateCopy[findIndex].quan++;\n    console.log(stateCopy[0]);\n    return stateCopy;\n\n  }else if( action.type === 'quanSubt' ){\n    let findIndex = state.findIndex(x => x.id === action.payload.id);\n    let stateCopy = [...state];\n    stateCopy[findIndex].quan--;\n    return stateCopy;\n\n  }else{\n    return state;\n  }\n}\n//-------------------------------------------------------\n//아래는 Cart.js 에서만 쓰이는 alert창\n//아래는 redux테스트이므로, 보통엔 해당 해당 컴포넌트에서 useState로 사용\nlet initAlert = false;\nfunction reducerAlert(state = initAlert, action) {\n  if( action.type === 'alertClose'){\n    state = true;\n    return state;\n  }else{\n    return state;\n  }\n}\n\n//-------------------------------------------------------\n//컴포넌트에서 공유될 redux state\nlet store = createStore(combineReducers({reducer, reducerAlert}));\n\n//-------------------------------------------------------\n//redux state 공유시, Provider로 공유될 컴포넌트를 감싸고 redux state를 지정\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store = {store} >\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n//serviceWorkerRegistration.unregister();//PWA 세팅안함\nserviceWorkerRegistration.register();//PWA 사용\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}